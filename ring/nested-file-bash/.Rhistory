ggplot(data = mat[block_start:block_end,],mapping = aes(x = numproc, y = exec.time, color = node)) +
#geom_line()+
geom_point()+
#ylim(0,2.5e-04)+
#xlim(0,24)
library(ggplot2)
block_start <- 1 + 24 * 0
block_end <- 24 * 4
ggplot(data = mat[block_start:block_end,],mapping = aes(x = numproc, y = exec.time, color = node)) +
#geom_line()+
#ylim(0,2.5e-04)+
#xlim(0,24)+
geom_point()
library(ggplot2)
block_start <- 1 + 24 * 0
block_end <- 24 * 2
ggplot(data = mat[block_start:block_end,],mapping = aes(x = numproc, y = exec.time, color = node)) +
#geom_line()+
#ylim(0,2.5e-04)+
#xlim(0,24)+
geom_point()
library(ggplot2)
block_start <- 1 + 24 * 3
block_end <- 24 * 4
ggplot(data = mat[block_start:block_end,],mapping = aes(x = numproc, y = exec.time, color = node)) +
#geom_line()+
#ylim(0,2.5e-04)+
#xlim(0,24)+
geom_point()
library(ggplot2)
block_start <- 1 + 24 * 2
block_end <- 24 * 3
ggplot(data = mat[block_start:block_end,],mapping = aes(x = numproc, y = exec.time, color = node)) +
#geom_line()+
#ylim(0,2.5e-04)+
#xlim(0,24)+
geom_point()
setwd("~/Pubblici/learn-git/ring/nested-file-bash")
mat <- array(data = 0, dim = c(96,4))
colnames(mat) <- c('node','numproc','exec-time','init-time')
row <- 1
for (i in 1:4){
for (j in 1:24){
num <- i*j
tab <- read.csv(paste("ring-node-",i,"-core-",num,"/summary.csv", sep = ''))
mat[row, 1] <- i
mat[row, 2] <- num
mat[row, 3] <- mean(tab[,2])
mat[row, 4] <- mean(tab[,3])
row <- row + 1
}
}
mat <- data.frame(mat)
mat$node <- as.factor(mat$node)
setwd("~/Pubblici/learn-git/matrix")
mat.add <- array(data = 0, dim = c(48,8))
colnames(mat.add) <- c('decom','topo','matrix',
'pre.send','main.matrix',
'remain.matrix','total.comput','total')
which.row <- 1
topo.row <- 1
while (which.row <= 48){
uno <- D_vec[topo.row,1]
due <- D_vec[topo.row,2]
tre <- D_vec[topo.row,3]
topo.row <- topo.row + 1
folder <- paste('matrix-',uno,'-',due,'-',tre, sep='')
for (i in 0:9){
subfolder <- paste('./',folder,'/matrix-',i,sep='')
tab.add <- read.csv(paste(subfolder,'/summary.csv', sep = ''))
if (tre == 1 && due == 1) {
mat.add[which.row, 1] <- '1D'
} else if (tre == 1 ){
mat.add[which.row, 1] <- '2D'
} else{
mat.add[which.row, 1] <- '3D'
}
if (i == 0){
mat.add[which.row, 3] <- '2400x100x100'
} else if (i == 1){
mat.add[which.row, 3] <- '1200x200x100'
} else if (i== 2) {
mat.add[which.row, 3] <- '800x300x100'
}else if (i== 3) {
mat.add[which.row, 3] <- '100x100x2400'
}else if (i== 4) {
mat.add[which.row, 3] <- '100x200x1200'
}else if (i== 5) {
mat.add[which.row, 3] <- '100x300x800'
}else if (i== 6) {
mat.add[which.row, 3] <- '300x400x200'
}else if (i== 7) {
mat.add[which.row, 3] <- '200x1200x100'
}else if (i== 8) {
mat.add[which.row, 3] <- '100x100x2400'
}else if (i== 9) {
mat.add[which.row, 3] <- '100x1200x200'
}
mat.add[which.row, 2] <- folder
mat.add[which.row, 4] <- mean(tab.add[,1])
mat.add[which.row, 5] <- mean(tab.add[,2])
mat.add[which.row, 6] <- mean(tab.add[,3])
mat.add[which.row, 7] <- mean(tab.add[,4])
mat.add[which.row, 8] <- mean(tab.add[,5])
which.row <- which.row + 1
}
}
D_vec <- array(data = 0, dim = c(16,3))
D2_vec <- array(data = 0, dim = c(6,3))
D3_vec <- array(data = 0, dim = c(9,3))
# 1D decomposition
D_vec[1,1]=24
D_vec[1,2]=1
D_vec[1,3]=1
# 2D decomposition
D_vec[2,1]=12
D_vec[2,2]=2
D_vec[2,3]=1
D_vec[3,1]=2
D_vec[3,2]=12
D_vec[3,3]=1
D_vec[4,1]=6
D_vec[4,2]=4
D_vec[4,3]=1
D_vec[5,1]=4
D_vec[5,2]=6
D_vec[5,3]=1
D_vec[6,1]=3
D_vec[6,2]=8
D_vec[6,3]=1
D_vec[7,1]=8
D_vec[7,2]=3
D_vec[7,3]=1
# 3D decomposition
D_vec[8,1]=2
D_vec[8,2]=2
D_vec[8,3]=6
D_vec[9,1]=2
D_vec[9,2]=6
D_vec[9,3]=2
D_vec[10,1]=6
D_vec[10,2]=2
D_vec[10,3]=2
D_vec[11,1]=4
D_vec[11,2]=2
D_vec[11,3]=3
D_vec[12,1]=4
D_vec[12,2]=3
D_vec[12,3]=2
D_vec[13,1]=2
D_vec[13,2]=4
D_vec[13,3]=3
D_vec[14,1]=2
D_vec[14,2]=3
D_vec[14,3]=4
D_vec[15,1]=3
D_vec[15,2]=4
D_vec[15,3]=2
D_vec[16,1]=3
D_vec[16,2]=2
D_vec[16,3]=4
setwd("~/Pubblici/learn-git/matrix")
mat.add <- array(data = 0, dim = c(48,8))
colnames(mat.add) <- c('decom','topo','matrix',
'pre.send','main.matrix',
'remain.matrix','total.comput','total')
which.row <- 1
topo.row <- 1
while (which.row <= 48){
uno <- D_vec[topo.row,1]
due <- D_vec[topo.row,2]
tre <- D_vec[topo.row,3]
topo.row <- topo.row + 1
folder <- paste('matrix-',uno,'-',due,'-',tre, sep='')
for (i in 0:9){
subfolder <- paste('./',folder,'/matrix-',i,sep='')
tab.add <- read.csv(paste(subfolder,'/summary.csv', sep = ''))
if (tre == 1 && due == 1) {
mat.add[which.row, 1] <- '1D'
} else if (tre == 1 ){
mat.add[which.row, 1] <- '2D'
} else{
mat.add[which.row, 1] <- '3D'
}
if (i == 0){
mat.add[which.row, 3] <- '2400x100x100'
} else if (i == 1){
mat.add[which.row, 3] <- '1200x200x100'
} else if (i== 2) {
mat.add[which.row, 3] <- '800x300x100'
}else if (i== 3) {
mat.add[which.row, 3] <- '100x100x2400'
}else if (i== 4) {
mat.add[which.row, 3] <- '100x200x1200'
}else if (i== 5) {
mat.add[which.row, 3] <- '100x300x800'
}else if (i== 6) {
mat.add[which.row, 3] <- '300x400x200'
}else if (i== 7) {
mat.add[which.row, 3] <- '200x1200x100'
}else if (i== 8) {
mat.add[which.row, 3] <- '100x100x2400'
}else if (i== 9) {
mat.add[which.row, 3] <- '100x1200x200'
}
mat.add[which.row, 2] <- folder
mat.add[which.row, 4] <- mean(tab.add[,1])
mat.add[which.row, 5] <- mean(tab.add[,2])
mat.add[which.row, 6] <- mean(tab.add[,3])
mat.add[which.row, 7] <- mean(tab.add[,4])
mat.add[which.row, 8] <- mean(tab.add[,5])
which.row <- which.row + 1
}
}
setwd("~/Pubblici/learn-git/matrix")
mat.add <- array(data = 0, dim = c(160,8))
colnames(mat.add) <- c('decom','topo','matrix',
'pre.send','main.matrix',
'remain.matrix','total.comput','total')
which.row <- 1
topo.row <- 1
while (which.row <= 48){
uno <- D_vec[topo.row,1]
due <- D_vec[topo.row,2]
tre <- D_vec[topo.row,3]
topo.row <- topo.row + 1
folder <- paste('matrix-',uno,'-',due,'-',tre, sep='')
for (i in 0:9){
subfolder <- paste('./',folder,'/matrix-',i,sep='')
tab.add <- read.csv(paste(subfolder,'/summary.csv', sep = ''))
if (tre == 1 && due == 1) {
mat.add[which.row, 1] <- '1D'
} else if (tre == 1 ){
mat.add[which.row, 1] <- '2D'
} else{
mat.add[which.row, 1] <- '3D'
}
if (i == 0){
mat.add[which.row, 3] <- '2400x100x100'
} else if (i == 1){
mat.add[which.row, 3] <- '1200x200x100'
} else if (i== 2) {
mat.add[which.row, 3] <- '800x300x100'
}else if (i== 3) {
mat.add[which.row, 3] <- '100x100x2400'
}else if (i== 4) {
mat.add[which.row, 3] <- '100x200x1200'
}else if (i== 5) {
mat.add[which.row, 3] <- '100x300x800'
}else if (i== 6) {
mat.add[which.row, 3] <- '300x400x200'
}else if (i== 7) {
mat.add[which.row, 3] <- '200x1200x100'
}else if (i== 8) {
mat.add[which.row, 3] <- '100x100x2400'
}else if (i== 9) {
mat.add[which.row, 3] <- '100x1200x200'
}
mat.add[which.row, 2] <- folder
mat.add[which.row, 4] <- mean(tab.add[,1])
mat.add[which.row, 5] <- mean(tab.add[,2])
mat.add[which.row, 6] <- mean(tab.add[,3])
mat.add[which.row, 7] <- mean(tab.add[,4])
mat.add[which.row, 8] <- mean(tab.add[,5])
which.row <- which.row + 1
}
}
mat.add <- data.frame(mat.add)
mat.add$pre.send <- as.numeric(mat.add$pre.send)
mat.add$main.matrix <- as.numeric(mat.add$main.matrix)
mat.add$remain.matrix <- as.numeric(mat.add$remain.matrix)
mat.add$total.comput <- as.numeric(mat.add$total.comput)
mat.add$total <- as.numeric(mat.add$total)
summary(mat.add)
library(ggplot2)
ggplot(data = mat.add) +
geom_boxplot(mapping = aes(x = decom, y = pre.send , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total.comput , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total , color = matrix))
setwd("~/Pubblici/learn-git/matrix")
mat.add <- array(data = 0, dim = c(160,8))
colnames(mat.add) <- c('decom','topo','matrix',
'pre.send','main.matrix',
'remain.matrix','total.comput','total')
which.row <- 1
topo.row <- 1
while (which.row <= 160){
uno <- D_vec[topo.row,1]
due <- D_vec[topo.row,2]
tre <- D_vec[topo.row,3]
topo.row <- topo.row + 1
folder <- paste('matrix-',uno,'-',due,'-',tre, sep='')
for (i in 0:9){
subfolder <- paste('./',folder,'/matrix-',i,sep='')
tab.add <- read.csv(paste(subfolder,'/summary.csv', sep = ''))
if (tre == 1 && due == 1) {
mat.add[which.row, 1] <- '1D'
} else if (tre == 1 ){
mat.add[which.row, 1] <- '2D'
} else{
mat.add[which.row, 1] <- '3D'
}
if (i == 0){
mat.add[which.row, 3] <- '2400x100x100'
} else if (i == 1){
mat.add[which.row, 3] <- '1200x200x100'
} else if (i== 2) {
mat.add[which.row, 3] <- '800x300x100'
}else if (i== 3) {
mat.add[which.row, 3] <- '100x100x2400'
}else if (i== 4) {
mat.add[which.row, 3] <- '100x200x1200'
}else if (i== 5) {
mat.add[which.row, 3] <- '100x300x800'
}else if (i== 6) {
mat.add[which.row, 3] <- '300x400x200'
}else if (i== 7) {
mat.add[which.row, 3] <- '200x1200x100'
}else if (i== 8) {
mat.add[which.row, 3] <- '100x100x2400'
}else if (i== 9) {
mat.add[which.row, 3] <- '100x1200x200'
}
mat.add[which.row, 2] <- folder
mat.add[which.row, 4] <- mean(tab.add[,1])
mat.add[which.row, 5] <- mean(tab.add[,2])
mat.add[which.row, 6] <- mean(tab.add[,3])
mat.add[which.row, 7] <- mean(tab.add[,4])
mat.add[which.row, 8] <- mean(tab.add[,5])
which.row <- which.row + 1
}
}
mat.add <- data.frame(mat.add)
mat.add$pre.send <- as.numeric(mat.add$pre.send)
mat.add$main.matrix <- as.numeric(mat.add$main.matrix)
mat.add$remain.matrix <- as.numeric(mat.add$remain.matrix)
mat.add$total.comput <- as.numeric(mat.add$total.comput)
mat.add$total <- as.numeric(mat.add$total)
summary(mat.add)
library(ggplot2)
ggplot(data = mat.add) +
geom_boxplot(mapping = aes(x = decom, y = pre.send , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total.comput , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total , color = matrix))
library(ggplot2)
ggplot(data = mat.add) +
geom_boxplot(mapping = aes(x = decom, y = pre.send ))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total.comput ))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total ))
setwd("~/Pubblici/learn-git/matrix")
mat.add <- array(data = 0, dim = c(170,8))
colnames(mat.add) <- c('decom','topo','matrix',
'pre.send','main.matrix',
'remain.matrix','total.comput','total')
which.row <- 1
topo.row <- 1
while (which.row <= 160){
uno <- D_vec[topo.row,1]
due <- D_vec[topo.row,2]
tre <- D_vec[topo.row,3]
topo.row <- topo.row + 1
folder <- paste('matrix-',uno,'-',due,'-',tre, sep='')
for (i in 0:9){
subfolder <- paste('./',folder,'/matrix-',i,sep='')
tab.add <- read.csv(paste(subfolder,'/summary.csv', sep = ''))
if (tre == 1 && due == 1) {
mat.add[which.row, 1] <- '1D'
} else if (tre == 1 ){
mat.add[which.row, 1] <- '2D'
} else{
mat.add[which.row, 1] <- '3D'
}
if (i == 0){mat.add[which.row, 3] <- '2400x100x100'}
else if (i == 1){ mat.add[which.row, 3] <- '1200x200x100'}
else if (i== 2) { mat.add[which.row, 3] <- '800x300x100' }
else if (i== 3) { mat.add[which.row, 3] <- '100x100x2400'}
else if (i== 4) { mat.add[which.row, 3] <- '100x200x1200'}
else if (i== 5) { mat.add[which.row, 3] <- '100x300x800' }
else if (i== 6) { mat.add[which.row, 3] <- '300x400x200'}
else if (i== 7) { mat.add[which.row, 3] <- '200x1200x100'}
else if (i== 8) { mat.add[which.row, 3] <- '100x100x2400' }
else if (i== 9) { mat.add[which.row, 3] <- '100x1200x200' }
mat.add[which.row, 2] <- folder
mat.add[which.row, 4] <- mean(tab.add[,1])
mat.add[which.row, 5] <- mean(tab.add[,2])
mat.add[which.row, 6] <- mean(tab.add[,3])
mat.add[which.row, 7] <- mean(tab.add[,4])
mat.add[which.row, 8] <- mean(tab.add[,5])
which.row <- which.row + 1
}
}
folder <- 'matrix-check'
for (i in 0:9){
subfolder <- paste('./',folder,'/matrix-',i,sep='')
tab.add <- read.csv(paste(subfolder,'/summary.csv', sep = ''))
mat.add[which.row, 1] <- 'check'
if (i == 0){mat.add[which.row, 3] <- '2400x100x100'}
else if (i == 1){ mat.add[which.row, 3] <- '1200x200x100'}
else if (i== 2) { mat.add[which.row, 3] <- '800x300x100' }
else if (i== 3) { mat.add[which.row, 3] <- '100x100x2400'}
else if (i== 4) { mat.add[which.row, 3] <- '100x200x1200'}
else if (i== 5) { mat.add[which.row, 3] <- '100x300x800' }
else if (i== 6) { mat.add[which.row, 3] <- '300x400x200'}
else if (i== 7) { mat.add[which.row, 3] <- '200x1200x100'}
else if (i== 8) { mat.add[which.row, 3] <- '100x100x2400' }
else if (i== 9) { mat.add[which.row, 3] <- '100x1200x200' }
mat.add[which.row, 2] <- 'matrix-24-1-1'
mat.add[which.row, 4] <- mean(tab.add[,1])
mat.add[which.row, 5] <- mean(tab.add[,2])
mat.add[which.row, 6] <- 0
mat.add[which.row, 7] <- mean(tab.add[,2])
mat.add[which.row, 8] <- mean(tab.add[,3])
which.row <- which.row + 1
}
mat.add <- data.frame(mat.add)
mat.add$pre.send <- as.numeric(mat.add$pre.send)
mat.add$main.matrix <- as.numeric(mat.add$main.matrix)
mat.add$remain.matrix <- as.numeric(mat.add$remain.matrix)
mat.add$total.comput <- as.numeric(mat.add$total.comput)
mat.add$total <- as.numeric(mat.add$total)
library(ggplot2)
ggplot(data = mat.add) +
geom_boxplot(mapping = aes(x = decom, y = pre.send , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total.comput , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total , color = matrix))
library(ggplot2)
ggplot(data = mat.add) +
geom_boxplot(mapping = aes(x = decom, y = pre.send ))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total.comput ))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total ))
library(ggplot2)
ggplot(data = mat.add) +
geom_boxplot(mapping = aes(x = decom, y = pre.send , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = main.matrix , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total.comput , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total , color = matrix))
library(ggplot2)
ggplot(data = mat.add) +
geom_boxplot(mapping = aes(x = decom, y = pre.send , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = remain.matrix , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total.comput , color = matrix))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total , color = matrix))
library(ggplot2)
ggplot(data = mat.add) +
geom_boxplot(mapping = aes(x = decom, y = pre.send ))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = remain.matrix ))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total.comput ))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total ))
library(ggplot2)
ggplot(data = mat.add) +
geom_boxplot(mapping = aes(x = decom, y = pre.send ))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = main.matrix ))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total.comput ))
ggplot(data = mat.add)+
geom_boxplot(mapping = aes(x = decom, y = total ))
library(ggplot2)
ggplot(data = mat.add) +
geom_boxplot(mapping = aes(x = matrix, y = pre.send , color = decom))
library(ggplot2)
ggplot(data = mat.add) +
coord_flip()+
geom_boxplot(mapping = aes(x = matrix, y = pre.send , color = decom))
library(ggplot2)
ggplot(data = mat.add) +
coord_flip()+
geom_boxplot(mapping = aes(x = matrix, y = pre.send , color = decom))
ggplot(data = mat.add) +
coord_flip()+
geom_boxplot(mapping = aes(x = matrix, y = main.matrix , color = decom))
ggplot(data = mat.add) +
coord_flip()+
geom_boxplot(mapping = aes(x = matrix, y = total.comput , color = decom))
ggplot(data = mat.add) +
coord_flip()+
geom_boxplot(mapping = aes(x = matrix, y = total , color = decom))
library(ggplot2)
block_start <- 1 + 24 * 2
block_end <- 24 * 3
ggplot(data = mat[block_start:block_end,],mapping = aes(x = numproc, y = exec.time, color = node)) +
#geom_line()+
#ylim(0,2.5e-04)+
#xlim(0,24)+
geom_point()
library(ggplot2)
block_start <- 1 + 24 * 0
block_end <- 24 * 4
ggplot(data = mat[block_start:block_end,],mapping = aes(x = numproc, y = exec.time, color = node)) +
#geom_line()+
#ylim(0,2.5e-04)+
#xlim(0,24)+
geom_point()
